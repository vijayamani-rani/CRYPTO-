# Problem 18: Show subkey split structure in DES
def split_key(key_56):
    left = key_56[:28]
    right = key_56[28:]
    return left, right

def subkey_structure(key_56):
    left, right = split_key(key_56)
    print("Left 28 bits:", left)
    print("Right 28 bits:", right)

    print("\nEach subkey gets 24 bits from left + 24 from right (hypothetically)")
    for i in range(1, 17):
        # Simulate circular shift
        shift = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1][i - 1]
        left = left_shift(left, shift)
        right = left_shift(right, shift)
        subkey = left[:24] + right[:24]  # 48 bits from both halves
        print(f"Subkey {i:2}: {subkey}")

# 56-bit example key
key_56 = '11100011100011100011100011100011100011100011100011100011'
subkey_structure(key_56)
