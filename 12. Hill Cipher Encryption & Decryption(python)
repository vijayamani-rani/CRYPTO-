import numpy as np

def hill_encrypt(msg, key):
    msg = msg.upper().replace(" ", "")
    while len(msg) % 2 != 0:
        msg += 'X'
    K = np.array(key).reshape(2, 2)
    cipher = ''
    for i in range(0, len(msg), 2):
        pair = np.array([[ord(msg[i]) - 65], [ord(msg[i+1]) - 65]])
        res = np.dot(K, pair) % 26
        cipher += chr(res[0][0] + 65) + chr(res[1][0] + 65)
    return cipher

def hill_decrypt(cipher, key):
    det = int(np.round(np.linalg.det(key))) % 26
    inv_det = pow(det, -1, 26)
    inv_key = np.round(inv_det * np.linalg.inv(key)).astype(int) % 26
    msg = ''
    for i in range(0, len(cipher), 2):
        pair = np.array([[ord(cipher[i]) - 65], [ord(cipher[i+1]) - 65]])
        res = np.dot(inv_key, pair) % 26
        msg += chr(res[0][0] + 65) + chr(res[1][0] + 65)
    return msg

key_matrix = [9, 4, 5, 7]
plaintext = "meet me at the usual place at ten rather than eight oclock"
cipher = hill_encrypt(plaintext, key_matrix)
print("Encrypted:", cipher)
print("Decrypted:", hill_decrypt(cipher, np.array(key_matrix).reshape(2,2)))
